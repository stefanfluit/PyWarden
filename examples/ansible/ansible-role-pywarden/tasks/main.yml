---
# tasks file for ansible-role-pywarden

- name: Ensure pywarden config dir exists
  ansible.builtin.file:
    path: "/opt/pywarden"
    state: directory
    mode: 0700
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
  become: true

- name: Copy template file
  ansible.builtin.template:
    src: pywarden_config.yaml.j2
    dest: "/opt/pywarden/pywarden_config.yaml"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: 0600
    remote_src: false
  delegate_to: localhost
  become: true

- name: Ensure prerquisites are installed
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  become: true
  with_items:
    - python3-pip
    - libc6
    - build-essential

- name: Add nodejs apt key
  ansible.builtin.apt_key:
    url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
    state: present

- name: Add nodejs 17.x ppa for apt repo
  ansible.builtin.apt_repository:
    repo: deb https://deb.nodesource.com/node_17.x bionic main
    update_cache: yes

- name: Install nodejs
  ansible.builtin.apt:
    update_cache: yes
    name: nodejs
    state: present

- name: Install BW CLI
  ansible.builtin.npm:
    name: "@bitwarden/cli"
    global: yes

- name: Ensure pip3 is upgraded
  ansible.builtin.pip:
    name: pip
    extra_args: --upgrade
  delegate_to: localhost

- name: Ensure pywarden is installed
  ansible.builtin.pip:
    name: PyWarden
    extra_args: --upgrade
  delegate_to: localhost

- name: Create Organization Collections
  ansible.builtin.shell:
    cmd: PyWarden --add-org-collection --name '{{ item.name }}' --access-group '{{ item.access_group }}'
  delegate_to: localhost

- name: Create Organization Items
  ansible.builtin.shell:
    cmd: PyWarden --add-org-entry --name "{{ item.name }}" --username "{{ item.username }}" --password "{{ item.password }}" --url "{{ item.url }}" --org-collection "{{ item.org_collection }}" --access-group "{{ item.access_group }}"
  with_items: "{{ pywarden_org_items }}"
  delegate_to: localhost
